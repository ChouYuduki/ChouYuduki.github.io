[{"content":"here is some basic operation of vim:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 # delete left 1 char d j # delete left 3 char d 3 j # delete right 1 char d l # delete right 3 char d 3 l # cut the whole line d d # copy the whole line y y # paste p # undo the last change u # go to the next word w # back to last word b # delete next word and into insert mode # (which means you can change the word directly) c w # change the content in \u0026#34;\u0026#34; or \u0026lt;\u0026gt; or whatever # h, which means in c h \u0026#34; c h \u0026lt;\u0026gt; # redo the undo change \u0026lt;ctrl\u0026gt; + r # find something f # delete until = d f = 0 # go to start of the line A # goto end and insert ","date":"2024-11-19T00:00:00Z","permalink":"https://ChouYuduki.github.io/p/basic-operation-of-vim/","title":"Basic Operation of Vim"},{"content":"Install Part Install NeoVim first you need to try neovim, remember to install itâ€™s newest version from github release (apt install is too old version)\nhttps://github.com/neovim/neovim\nThen you will need vim-plug to install plugins https://github.com/junegunn/vim-plug\nremember to reopen config file to finish your config\nuse the command line below to install what plugins you want:\n1 :PlugInstall [plugname] then add itsâ€™ github link to your config file, plz reference the github page of vim-plug above\nInstall coc.nvim to make your nvim like a real IDE make sure you have updated your neovim to the newest version\nhttps://github.com/neoclide/coc.nvim\nuse the command line below to install plugs of coc.nvim:\n1 :CocInstall coc-json You can install coc-marketplace first and use the command below to find plugs of coc.nvim:\n1 2 3 :CocInstall Coc-marketplace :CocList marketplace also use the command line below to check what you have installed:\n1 :CocList extensions then you can press to get further action\nwhat CocPlugs Iâ€™ve installed are above\nConfig Your Neovim enter ~/.config and make /nvim/init.vim\nhere is my config:\nhttps://github.com/ChouYuduki/NeovimSettings\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 set number set cursorline set showcmd \u0026#34; show what you did on the lower right corner set wildmenu set hlsearch set incsearch set ignorecase set smartcase set tabstop=4 set softtabstop=4 set shiftwidth=4 set noexpandtab set autoindent set cindent noremap h i noremap H I noremap i k noremap I 5k noremap K 5j noremap k j noremap j h \u0026#34; open file-tree explorer by typing tt noremap tt :CocCommand explorer\u0026lt;CR\u0026gt; map s \u0026lt;nop\u0026gt; map S :w\u0026lt;CR\u0026gt; map Q :q\u0026lt;CR\u0026gt; map R :source $MYVIMRC\u0026lt;CR\u0026gt; call plug#begin() Plug \u0026#39;vim-airline/vim-airline\u0026#39; Plug \u0026#39;connorholyday/vim-snazzy\u0026#39; Plug \u0026#39;neoclide/coc.nvim\u0026#39;, {\u0026#39;branch\u0026#39;: \u0026#39;release\u0026#39;} Plug \u0026#39;jiangmiao/auto-pairs\u0026#39; call plug#end() let g:SnazzyTransparent = 1 color snazzy \u0026#34; initial coc.nvim plugins let g:coc_global_extensions = [ \u0026#39;coc-json\u0026#39;, \u0026#39;coc-vimlsp\u0026#39;, \u0026#39;coc-marketplace\u0026#39;, \u0026#39;coc-highlight\u0026#39; ] \u0026#34; Use tab for trigger completion with characters ahead and navigate \u0026#34; NOTE: There\u0026#39;s always complete item selected by default, you may want to enable \u0026#34; no select by `\u0026#34;suggest.noselect\u0026#34;: true` in your configuration file \u0026#34; NOTE: Use command \u0026#39;:verbose imap \u0026lt;tab\u0026gt;\u0026#39; to make sure tab is not mapped by \u0026#34; other plugin before putting this into your config inoremap \u0026lt;silent\u0026gt;\u0026lt;expr\u0026gt; \u0026lt;TAB\u0026gt; \\ coc#pum#visible() ? coc#pum#next(1) : \\ CheckBackspace() ? \u0026#34;\\\u0026lt;Tab\u0026gt;\u0026#34; : \\ coc#refresh() inoremap \u0026lt;expr\u0026gt;\u0026lt;S-TAB\u0026gt; coc#pum#visible() ? coc#pum#prev(1) : \u0026#34;\\\u0026lt;C-h\u0026gt;\u0026#34; \u0026#34; Make \u0026lt;CR\u0026gt; to accept selected completion item or notify coc.nvim to format \u0026#34; \u0026lt;C-g\u0026gt;u breaks current undo, please make your own choice inoremap \u0026lt;silent\u0026gt;\u0026lt;expr\u0026gt; \u0026lt;CR\u0026gt; coc#pum#visible() ? coc#pum#confirm() \\: \u0026#34;\\\u0026lt;C-g\u0026gt;u\\\u0026lt;CR\u0026gt;\\\u0026lt;c-r\u0026gt;=coc#on_enter()\\\u0026lt;CR\u0026gt;\u0026#34; function! CheckBackspace() abort let col = col(\u0026#39;.\u0026#39;) - 1 return !col || getline(\u0026#39;.\u0026#39;)[col - 1] =~# \u0026#39;\\s\u0026#39; endfunction \u0026#34; Use \u0026lt;ctrl-space\u0026gt; to trigger completion inoremap \u0026lt;silent\u0026gt;\u0026lt;expr\u0026gt; \u0026lt;c-space\u0026gt; coc#refresh() \u0026#34; Highlight the same thing and its references when holding the cursor autocmd CursorHold * silent call CocActionAsync(\u0026#39;highlight\u0026#39;) ","date":"2024-11-19T00:00:00Z","permalink":"https://ChouYuduki.github.io/p/how-to-config-vim/","title":"How To Config Vim"},{"content":"1. Initial your directory use this command to initial the current dir: git init\nthen you can use this command to check your dirâ€™s status: git status\n2. submit your files add all of your modifying: git add .\nif you want to retract your add, use this: git reset\nthen your should tell git who you are: git config --global [user.name](http://user.name) \u0026quot;[your name]\u0026quot;\nfinally push your files: git commit -m \u0026quot;[what you modified]\u0026quot;\n3. ignore your files if these are some files you donâ€™t want git to track, first create a file called .gitignore\nthen add filesâ€™ name into this file\nðŸ’¡ if you let git start tracking some file, it will keep tracking it, even you try to ignore it after tracking, so you have to let git stop tracking the file:\ngit rm --cached [file name]\n4. add branch check now all of branches in this directory: git branch\nyou can use the command to create new branch: git branch [branch name]\nthen switch to the branch git checkout [branch name]\nif you want to switch back to the main branch: git checkout master\nif you want to merge the branch to your main branch: git merge [branch name]\nif you want to delete the branch: git branch -d [branch name]\n5. submit to github first create a new repository in github, and get itâ€™s link:\nin terminal tell where is your repository:\ngit remote add origin [https://github.com/link/....git]\nthen push your directory:\ngit push --set-upstream origin master or git push -u origin master\nhere github may let you input your username and pwd,\nBut This Password is NOT your github login password!!!\ngo to github setting \u0026gt; Developer Settings \u0026gt; Personal access tokens\nand remember to tickle all of below\nthen copy your personal access tokens, it will be shown only once.\nfinally paste it on the password field of the terminal.\nif you want github remember your info here, run this command line before you push:\ngit config credential.helper store\nafter the above, every time you want to push your modification, just use git push without any additional parameters.\nget newest version of this repository use git pull in this directory to get newest modificaiton\n","date":"2024-11-19T00:00:00Z","permalink":"https://ChouYuduki.github.io/p/how-to-use-git/","title":"How To Use Git"},{"content":"Install NodeJs via Binary Archive first download prebuilt binaries from NodeJs official website\nthen unzip it to any directory you wanna install, remember the path [node path]\nthen edit ~/.zshrc file, add below to the end\n1 2 3 # Nodejs export NODEJS_HOME=[node path]/bin export PATH=$NODEJS_HOME:$PATH then refresh config file\nsource ~/.zshrc\ninstall hexo npm installÂ https://github.com/CodeFalling/hexo-asset-imageÂ \u0026ndash;save\nInstall Anaconda https://docs.anaconda.com/anaconda/install/linux/\nbash is necessary!!!\nInstall Code Env 1. g++/gcc 1 sudo apt install build-essential ","date":"2024-11-19T00:00:00Z","permalink":"https://ChouYuduki.github.io/p/tips-of-config-envs-in-linux/","title":"Tips of Config Envs in Linux"}]